{
	"info": {
		"_postman_id": "231bd2c7-5f1d-49df-870a-d18e39ec9ff7",
		"name": "drafts-use-cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30197860"
	},
	"item": [
		{
			"name": "0. Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.to.have.status(200)){",
							"    console.log(\"0. Authenticated successfully.\");",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.environment.set(\"bearerToken\", jsonData.access_token);",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"} else {",
							"    console.log(\"0. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic c2FzLmVjOg=="
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "default"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "default"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{sasserver}}/SASLogon/oauth/token",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"SASLogon",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Create a term type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"prefix\", \"Example\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"1. Successfully created term type.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"termTypeId\", jsonData.id);;",
							"} else {",
							"    console.log(\"1. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term.type+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term.type+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Term Type\",\r\n    \"description\": \"Example Term Type with all attribute values populated\",\r\n    \"label\": \"Example Term Type\",\r\n    \"attributes\": [\r\n    {\r\n      \"name\": \"singleLineTextAttribute\",\r\n      \"label\": \"A single-line text attribute\",\r\n      \"description\": \"This is a description of the attribute. Single-line text attributes can be up to 4000 characters long and cannot contain newline characters.\",\r\n      \"required\": true,\r\n      \"type\": \"single-line\",\r\n      \"defaultValue\": \"This is an example of a single-line text attribute.\"\r\n    },\r\n    {\r\n      \"name\": \"multiLineTextAttribute\",\r\n      \"label\": \"A multi-line text attribute\",\r\n      \"description\": \"Multi-line text attributes can be up to 4000 characters.  Newline characters are allowed.\",\r\n      \"type\": \"multi-line\",\r\n      \"defaultValue\": \"This is an example of a multi-line text attribute\\\\nwith\\\\nnewline\\\\ncharacters.\"\r\n    },\r\n    {\r\n      \"name\": \"booleanAttribute\",\r\n      \"label\": \"A boolean attribute\",\r\n      \"description\": \"Boolean attributes can be either \\\"true\\\" or \\\"false\\\"\",\r\n      \"type\": \"boolean\",\r\n      \"defaultValue\": \"true\"\r\n    },\r\n    {\r\n      \"name\": \"dateAttribute\",\r\n      \"label\": \"A date attribute\",\r\n      \"description\": \"Date attributes should be specified with the format \\\"YYYY-MM-DD\\\"\",\r\n      \"type\": \"date\"\r\n    },\r\n    {\r\n      \"name\": \"timeAttribute\",\r\n      \"label\": \"A time attribute\",\r\n      \"description\": \"Time attributes should be specified with the format \\\"hh:mm:ssZ\\\"\",\r\n      \"type\": \"time\",\r\n      \"defaultValue\": \"10:23:45Z\"\r\n    },\r\n    {\r\n      \"name\": \"dateTimeAttribute\",\r\n      \"label\": \"A date-time attribute\",\r\n      \"description\": \"Date-time attributes should be specified with the format \\\"YYYY-MM-DDThh:mm:ssZ\\\"\",\r\n      \"type\": \"date-time\",\r\n      \"defaultValue\": \"2024-02-12T10:23:45.000Z\"\r\n    },\r\n    {\r\n      \"name\": \"singleSelectAttribute\",\r\n      \"label\": \"A single-select attribute\",\r\n      \"description\": \"Single-select attributes must specify at least one item in the \\\"items\\\" field\",\r\n      \"type\": \"single-select\",\r\n      \"items\": [\r\n        \"Item 1\",\r\n        \"Item 2\",\r\n        \"Item 3\"\r\n      ],\r\n      \"defaultValue\": \"Item 1\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/termTypes",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"termTypes"
					]
				}
			},
			"response": []
		},
		{
			"name": "2a. Create a term",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"2a. Successfully created term.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"termId\", jsonData.id);",
							"} else {",
							"    console.log(\"2a. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Term\",\r\n    \"label\": \"Created Term\",\r\n    \"description\": \"Term will be used in a later step\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms?publish=true",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "publish",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2b. Create a parent term",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"2b. Successfully created term.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"parentTermId\", jsonData.id);",
							"} else {",
							"    console.log(\"2b. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Parent Term\",\r\n    \"label\": \"Created Parent Term\",\r\n    \"description\": \"This term will be used as the parent of the two drafts created in the following steps\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms?publish=true",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "publish",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Create a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"3. Successfully created draft.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"draftId\", jsonData.id);",
							"    pm.environment.set('draftEtag', pm.response.headers.get('Etag'));",
							"} else {",
							"    console.log(\"3. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Draft\",\r\n    \"label\": \"Created Draft\",\r\n    \"description\": \"This is a created draft\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }  \r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms?publish=false",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "publish",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4a. Create a draft with a parent term",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"4a. Successfully created draft.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"childDraftId\", jsonData.id);",
							"} else {",
							"    console.log(\"4a. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Child Draft\",\r\n    \"label\": \"Created Draft\",\r\n    \"description\": \"This is a child draft of a term\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"parentId\": \"{{parentTermId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }  \r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms?publish=false",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "publish",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4b. Create a child draft of a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 201) {",
							"    console.log(\"4b. Successfully created draft.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"grandchildDraftId\", jsonData.id);",
							"    pm.environment.set('grandchildEtag', pm.response.headers.get('Etag'));",
							"} else {",
							"    console.log(\"4b. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{prefix}} Grandchild Draft\",\r\n    \"label\": \"Created Draft\",\r\n    \"description\": \"This is a child draft of a draft\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"parentId\": \"{{childDraftId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }  \r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms?publish=false",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "publish",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Create a draft from an existing term",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    if (pm.response.to.have.status(201)) {",
							"        console.log(\"5. Successfully created draft.\");",
							"        const rs = pm.response.json();",
							"        pm.environment.set(\"termDraftId\", rs.id);",
							"} else {",
							"    console.log(\"0. Failed with status: \" + pm.response.status);}",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{termId}}\" ,\r\n    \"name\": \"{{prefix}} TermDraft\",\r\n    \"label\": \"Created Draft\",\r\n    \"description\": \"This is a draft created from a term\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{termId}}/draft",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{termId}}",
						"draft"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Publish a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 200) {\r",
							"    console.log(\"6. Successfully published draft.\");\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set('draftEtag', pm.response.headers.get('Etag'));\r",
							"} else {\r",
							"    console.log(\"6. Failed with status: \" + pm.response.status);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "If-Match",
						"value": "{{draftEtag}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{draftId}}/draft/state?action=publish",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{draftId}}",
						"draft",
						"state"
					],
					"query": [
						{
							"key": "action",
							"value": "publish"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Get a draft by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 200) {\r",
							"    console.log(\"7. Successfully retrieved draft.\");\r",
							"} else {\r",
							"    console.log(\"7. Failed with status: \" + pm.response.status);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{grandchildDraftId}}/draft",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{grandchildDraftId}}",
						"draft"
					]
				}
			},
			"response": []
		},
		{
			"name": "8. Get drafts and terms via filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 200) {\r",
							"    console.log(\"8. Successfully retrieved drafts and terms.\");\r",
							"} else {\r",
							"    console.log(\"8. Failed with status: \" + pm.response.status);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.collection+json"
					},
					{
						"key": "Accept-Item",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"url": {
					"raw": "{{sasserver}}/glossary/terms?allowDrafts=all&filter=contains(name,'Draft')",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "allowDrafts",
							"value": "all"
						},
						{
							"key": "filter",
							"value": "contains(name,'Draft')"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "9. Update a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 200) {",
							"    console.log(\"9. Successfully updated draft.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set('grandchildEtag', pm.response.headers.get('Etag'));",
							"} else {",
							"    console.log(\"9. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "If-Match",
						"value": "{{grandchildEtag}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{   \r\n    \"id\": \"{{grandchildDraftId}}\",\r\n    \"name\": \"{{prefix}} Updated Draft\",\r\n    \"label\": \"update Draft\",\r\n    \"description\": \"This is a updated draft\",\r\n    \"termTypeId\": \"{{termTypeId}}\",\r\n    \"parentId\": \"{{childDraftId}}\",\r\n    \"attributes\": {\r\n        \"singleLineTextAttribute\": \"NC\",\r\n        \"multiLineTextAttribute\": \"NC\",\r\n        \"singleSelectAttribute\": \"Item 1\",\r\n        \"booleanAttribute\": true,\r\n        \"dateAttribute\": \"2024-05-24\",\r\n        \"timeAttribute\": \"10:00:00Z\",\r\n        \"dateTimeAttribute\": \"2024-05-23T12:00:00Z\"\r\n    }  \r\n}"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{grandchildDraftId}}/draft",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{grandchildDraftId}}",
						"draft"
					]
				}
			},
			"response": []
		},
		{
			"name": "10. Patch a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 200) {",
							"    console.log(\"10. Successfully patched draft.\");",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set('grandchildEtag', pm.response.headers.get('Etag'));",
							"} else {",
							"    console.log(\"10. Failed with status: \" + pm.response.status);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term+json"
					},
					{
						"key": "Content-Type",
						"value": "application/json-patch+json"
					},
					{
						"key": "If-Match",
						"value": "{{grandchildEtag}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/parentId\",\r\n        \"value\": \"\"\r\n    }\r\n]"
				},
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{grandchildDraftId}}/draft",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{grandchildDraftId}}",
						"draft"
					]
				}
			},
			"response": []
		},
		{
			"name": "11. Delete a draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 204) {\r",
							"    console.log(\"11. Successfully deleted draft.\");\r",
							"} else {\r",
							"    console.log(\"11. Failed with status: \" + pm.response.status);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{sasserver}}/glossary/terms/{{termDraftId}}/draft",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms",
						"{{termDraftId}}",
						"draft"
					]
				}
			},
			"response": []
		},
		{
			"name": "Clean up drafts and terms",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let host=pm.environment.get(\"sasserver\");\r",
							"let token=pm.environment.get(\"access_token\");\r",
							"let items = pm.response.json().items;\r",
							" \r",
							"function deleteTerms(index) {\r",
							"    if (index >= items.length) {\r",
							"        console.log('All terms have been processed.');\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    aTerm=items[index]\r",
							"    delLink = aTerm.links.find(link=>link.rel===\"delete\").href;\r",
							" \r",
							"    delRequest = {\r",
							"        url: host + delLink,\r",
							"        method: 'DELETE',\r",
							"        header: 'Authorization: bearer ' + token\r",
							"    };\r",
							" \r",
							"    pm.sendRequest(delRequest, function (err, response) {\r",
							"        if (err) {\r",
							"            console.error('Error deleting term:', err);\r",
							"        } else {\r",
							"            console.log('Deleted term with id:', aTerm.id);\r",
							"        }\r",
							"        console.log(response)\r",
							"        deleteTerms(index + 1); \r",
							"    });\r",
							"    \r",
							"}\r",
							" \r",
							"deleteTerms(0);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.collection+json"
					},
					{
						"key": "Accept-Item",
						"value": "application/vnd.sas.glossary.term+json"
					}
				],
				"url": {
					"raw": "{{sasserver}}/glossary/terms?allowDrafts=all&filter=contains(name,'{{prefix}}')&sortBy=creationTimeStamp:descending",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"terms"
					],
					"query": [
						{
							"key": "allowDrafts",
							"value": "all"
						},
						{
							"key": "filter",
							"value": "contains(name,'{{prefix}}')"
						},
						{
							"key": "sortBy",
							"value": "creationTimeStamp:descending"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Clean up term type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code === 204) {\r",
							"    console.log(\"Successfully deleted the term type.\");\r",
							"} else {\r",
							"    console.log(\"Failed with status: \" + pm.response.status);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.sas.glossary.term.type+json"
					}
				],
				"url": {
					"raw": "{{sasserver}}/glossary/termTypes/{{termTypeId}}",
					"host": [
						"{{sasserver}}"
					],
					"path": [
						"glossary",
						"termTypes",
						"{{termTypeId}}"
					]
				}
			},
			"response": []
		}
	]
}